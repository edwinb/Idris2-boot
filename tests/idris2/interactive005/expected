1/1: Building IEdit (IEdit.idr)
Main> :gd 7 my_cong
my_cong x x Refl = Refl
Main> :gd 9 my_curry
my_curry f x y = f (x, y)
Main> :gd 11 my_uncurry
my_uncurry f x = f (fst x) (snd x)
Main> :gd 13 append
append [] ys = ys
append (x :: xs) ys = x :: append xs ys
Main> :gd 15 lappend
lappend [] ys = ys
lappend (x :: xs) ys = x :: lappend xs ys
Main> :gd 17 zipWith
zipWith f [] ys = []
zipWith f (x :: xs) (y :: ys) = f x y :: zipWith f xs ys
Main> :gd 29 lookup
lookup Here (ECons x es) = x
lookup (There p) (ECons x es) = lookup p es
Main> :t my_uncurry
Main.my_uncurry : (a -> b -> c) -> (a, b) -> c
Main> :q
Bye for now!
